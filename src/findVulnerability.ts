import axios from 'axios';

interface Advisory {
    id: string;
    ecosystem: string;
    packageName: string;
    summary: string;
    description: string;
    severity: string;
    updatedAt: string;
    vulnerableVersions: string;
}

interface ApiResponse {
    total_count: number;
    advisories: Advisory[];
}

async function checkNpmPackage(packageName: string): Promise<Advisory | null> {
    try {
        const response = await axios.get<ApiResponse>(`https://api.github.com/advisories/query?package=${packageName}&ecosystem=npm`);
        const data = response.data;
        if (data.total_count === 0) {
            console.log(`No advisories found for package ${packageName}`);
            return null;
        }
        // Assuming the API returns the first advisory if there are multiple
        const advisory = data.advisories[0];
        const advisoryData: Advisory = {
            id: advisory.id,
            ecosystem: advisory.ecosystem,
            packageName: advisory.packageName,
            summary: advisory.summary,
            description: advisory.description,
            severity: advisory.severity,
            updatedAt: advisory.updatedAt,
            vulnerableVersions: advisory.vulnerableVersions
        };
        return advisoryData;
    } catch (error) {
        console.error(`Error checking npm package: ${error}`);
        return null;
    }
}


export {
    checkNpmPackage
}


